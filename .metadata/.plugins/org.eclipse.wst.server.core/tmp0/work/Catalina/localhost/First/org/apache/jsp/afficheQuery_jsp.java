/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-12-05 08:09:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Book.book1;
import java.util.List;

public final class afficheQuery_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Book.book1");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title></title>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"description\" content=\"Creating Modal Window with Twitter Bootstrap\">\r\n");
      out.write("<link href=\"/twitter-bootstrap/twitter-bootstrap-v2/docs/assets/css/bootstrap.css\" rel=\"stylesheet\"> \r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"CSS/bootstrap.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"CSS/bootstrap-responsive.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"CSS/style.css\" />\r\n");
      out.write("    <script type=\"text/javascript\" src=\"./Js/jquery2.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"./Js/jquery2.sorted.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"./Js/bootstrap.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"./Js/ckform.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"./Js/common.js\"></script>\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        body {\r\n");
      out.write("            padding-bottom: 40px;\r\n");
      out.write("            background-color:#e9e7ef;\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar-nav {\r\n");
      out.write("            padding: 9px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 980px) {\r\n");
      out.write("            /* Enable use of floated navbar text */\r\n");
      out.write("            .navbar-text.pull-right {\r\n");
      out.write("                float: none;\r\n");
      out.write("                padding-left: 5px;\r\n");
      out.write("                padding-right: 5px;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');
      Book.book1 book1 = null;
      book1 = (Book.book1) _jspx_page_context.getAttribute("book1", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (book1 == null){
        book1 = new Book.book1();
        _jspx_page_context.setAttribute("book1", book1, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("book1"), request);
      out.write("\r\n");
      out.write("<form class=\"form-inline definewidth m20\" action=\"http://localhost:8080/First/searchbook.jsp\" method=\"post\">\r\n");
      out.write("    <font color=\"#33ccff\"><strong>图书查询：</strong></font>\r\n");
      out.write("    &nbsp &nbsp</button><input type=\"text\" name=\"isbn\"/><button type=\"submit\" class=\"btn btn-primary\">查询</button>\r\n");
      out.write("</form>\r\n");
      out.write("<table class=\"table table-bordered table-hover definewidth m10\">\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>ISBN</th>\r\n");
      out.write("        <th>图书名称</th>\r\n");
      out.write("        <th>作者</th>\r\n");
      out.write("        <th>出版社</th>\r\n");
      out.write("        <th>图书余量</th>\r\n");
      out.write("        <th>借阅</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("        ");
 
List<book1>list=(List<book1>)request.getAttribute("list");
if(list==null||list.size()<1){
	/* out.println("没有数据！"); */
}else{
	for(book1 book:list){
		
      out.write("\r\n");
      out.write("   <tr align=\"center\">\r\n");
      out.write("      <td>");
      out.print(book.getisbn());
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(book.getbookname());
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(book.getbookauthor());
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(book.getpubhouse());
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(book.getcount());
      out.write("</td>\r\n");
      out.write("      <td><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/brbookservlet?isbn=");
      out.print(book.getisbn());
      out.write("&count=");
      out.print(book.getcount());
      out.write("&bookname=");
      out.print(book.getbookname());
      out.write("\">借阅</a></td>\r\n");
      out.write("   </tr>\r\n");

	}
}

      out.write("\r\n");
      out.write("       </table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script src=\"./js/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"./js/bootstrap-tooltip.js\"></script>\r\n");
      out.write("<script src=\"./js/bootstrap-popover.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(function ()\r\n");
      out.write("{ $(\"#xiangqing\").popover();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
