/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-12-15 07:10:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jieshuliucheng_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta content=\"图书管理系统\" http-equiv=\"keywords\">\r\n");
      out.write("<meta name=\"description\" content=\"图书管理系统\">\r\n");
      out.write("<meta name=\"applicable-device\" content=\"pc,mobile\">\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\"/>\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"> \r\n");
      out.write("\r\n");
      out.write("<title>图书管理系统</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/index.css\" type=\"text/css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"CSS/children.css\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.SuperSlide.2.1.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/public.js\"></script><!-- 菜单js等-->\r\n");
      out.write("<!-- 时间选择js -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/laydate.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".roe{\r\n");
      out.write("   padding-top:20px;\r\n");
      out.write("   color: #fff;\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   font-size: 50px;\r\n");
      out.write("   font-family:'STKaiti';\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!--头部-->\r\n");
      out.write("<div class=\"topbox bg\">\r\n");
      out.write("<div class=\"wid_main fix\">\r\n");
      out.write("\t\t<div class=\"logo l\"><img src=\"\"  /></div>\r\n");
      out.write("\t\t<!-- 搜索 -->\r\n");
      out.write("\t\t<div class=\"roe\">\r\n");
      out.write("\t\t山东师范大学图书管理系统\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- top end -->\r\n");
      out.write("\r\n");
      out.write("<!-- 主体内容框 -->\r\n");
      out.write("<div class=\"contentbox wid_main bora_5\">\r\n");
      out.write("\t<div class=\"content\">\r\n");
      out.write("\t\t\t<div class=\"zy_content fix\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"zy_conbox\">\r\n");
      out.write("\t\t\t\t\t<div class=\"zy_newsxq\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"xq_tit bdb_d\">\r\n");
      out.write("\t\t\t\t\t\t\t<h1>山东师范大学图书借阅流程</h1>\r\n");
      out.write("\t\t\t\t\t\t\t<p><span>发布时间：2019-07-08 19:03:56</span><span>阅读：4235</span></p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"txt\">\r\n");
      out.write("\t\t\t\t\t\t\t<p>1、持一卡通进入图书馆，在电梯处有各楼层书籍分类信息。\r\n");
      out.write("\t\t                    </p>\r\n");
      out.write("\r\n");
      out.write("\t\t                    <p>2、找到自己想借阅书籍的分类，乘电梯前往该楼层\r\n");
      out.write("\t\t                    </p>\r\n");
      out.write("\t\t                    <p>3、在该楼层的触摸屏膜检索自己想借阅的书籍，找出索书号</p>\r\n");
      out.write("\t\t                    <p>4、通过索书号找到书籍相应书架。</p>\r\n");
      out.write("\t\t\t\t\t\t<p>5、将校园卡放到自动借阅机器上，将书籍条形码对准扫描口，扫描成功即可成功借阅。</p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
